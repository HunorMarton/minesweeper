{"remainingRequest":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hunor/projects/minesweeper/src/App.vue?vue&type=style&index=0&id=59c03ac4&scoped=true&lang=css&","dependencies":[{"path":"/Users/hunor/projects/minesweeper/src/App.vue","mtime":1598291840854},{"path":"/Users/hunor/projects/minesweeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgojYXBwIHsKICBkaXNwbGF5OiBmbGV4OwogIGFsaWduLWl0ZW1zOiBjZW50ZXI7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgZm9udC1mYW1pbHk6ICJDb3VyaWVyIE5ldyIsIENvdXJpZXIsIG1vbm9zcGFjZTsKICBmb250LXdlaWdodDogNzAwOwp9CgpoZWFkZXIgewogIGRpc3BsYXk6IGZsZXg7CiAganVzdGlmeS1jb250ZW50OiBzcGFjZS1iZXR3ZWVuOwogIG1hcmdpbjogMjBweCAwOwogIGZvbnQtc2l6ZTogMmVtOwp9CgpidXR0b24gewogIGZvbnQtc2l6ZTogaW5oZXJpdDsKfQoKLmJvYXJkIHsKICBkaXNwbGF5OiBncmlkOwogIGdyaWQtdGVtcGxhdGUtcm93czogcmVwZWF0KDEwLCBhdXRvKTsKICBncmlkLXRlbXBsYXRlLWNvbHVtbnM6IHJlcGVhdCgxMCwgYXV0byk7Cn0K"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyFA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div id=\"app\">\n    <div>\n      <header>\n        <div>{{ bombsRemaining }}</div>\n        <button @click=\"reset\">{{ gameStatus }}</button>\n        <Timer :gameInProgress=\"gameInProgress\" />\n      </header>\n      <div class=\"board\">\n        <Tile v-for=\"(tile, index) in tiles\" :key=\"index\" :tile=\"tile\" @reveal=\"reveal(index)\" />\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Tile from \"./components/Tile\";\nimport Timer from \"./components/Timer\";\nimport {\n  generateTiles,\n  totalNumberOfBombs,\n  getCoordinates,\n  getIndex,\n} from \"./utils\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Tile,\n    Timer,\n  },\n  data: function () {\n    return {\n      tiles: generateTiles(),\n    };\n  },\n  computed: {\n    bombsRemaining() {\n      const totalFlags = this.tiles.filter((tile) => tile.flagged).length;\n      return totalNumberOfBombs - totalFlags;\n    },\n    gameInProgress() {\n      if (this.gameWon || this.gameFailed) return false;\n      if (this.tiles.find((tile) => tile.revealed)) return true;\n      return false;\n    },\n    gameFailed() {\n      return this.tiles.find((tile) => tile.bomb && tile.revealed);\n    },\n    gameWon() {\n      const tilesRevealed = this.tiles.filter((tile) => tile.revealed).length;\n      return tilesRevealed + totalNumberOfBombs == 100;\n    },\n    gameStatus() {\n      if (this.gameFailed) return \"ðŸ˜”\";\n      if (this.gameWon) return \"ðŸ˜Ž\";\n      return \"ðŸ™‚\";\n    },\n  },\n  methods: {\n    reset() {\n      this.tiles = generateTiles();\n    },\n    reveal(index) {\n      if (index == undefined) return;\n\n      const tile = this.tiles[index];\n      if (!tile.revealed) {\n        tile.revealed = true;\n\n        if (!tile.bomb && tile.surroundingBombs == 0) {\n          const { row, column } = getCoordinates(index);\n\n          this.reveal(getIndex(row - 1, column - 1));\n          this.reveal(getIndex(row - 1, column - 0));\n          this.reveal(getIndex(row - 1, column + 1));\n          this.reveal(getIndex(row - 0, column - 1));\n          this.reveal(getIndex(row - 0, column + 1));\n          this.reveal(getIndex(row + 1, column - 1));\n          this.reveal(getIndex(row + 1, column - 0));\n          this.reveal(getIndex(row + 1, column + 1));\n        }\n      }\n    },\n  },\n};\n</script>\n\n<style scoped>\n#app {\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  font-family: \"Courier New\", Courier, monospace;\n  font-weight: 700;\n}\n\nheader {\n  display: flex;\n  justify-content: space-between;\n  margin: 20px 0;\n  font-size: 2em;\n}\n\nbutton {\n  font-size: inherit;\n}\n\n.board {\n  display: grid;\n  grid-template-rows: repeat(10, auto);\n  grid-template-columns: repeat(10, auto);\n}\n</style>\n"]}]}