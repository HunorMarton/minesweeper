{"remainingRequest":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/hunor/projects/minesweeper/src/App.vue?vue&type=style&index=0&lang=css&","dependencies":[{"path":"/Users/hunor/projects/minesweeper/src/App.vue","mtime":1598293695568},{"path":"/Users/hunor/projects/minesweeper/node_modules/css-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/loaders/stylePostLoader.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/postcss-loader/src/index.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/hunor/projects/minesweeper/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgpAaW1wb3J0IHVybCgiaHR0cHM6Ly9mb250cy5nb29nbGVhcGlzLmNvbS9jc3MyP2ZhbWlseT1Sb2JvdG8mZmFtaWx5PVVidW50dTp3Z2h0QDcwMCZkaXNwbGF5PXN3YXAiKTsKCmh0bWwgewogIGhlaWdodDogMTAwJTsKfQoKYm9keSB7CiAgYmFja2dyb3VuZC1jb2xvcjogIzAwNjk4OTsKICBmb250LWZhbWlseTogIlJvYm90byIsIHNhbnMtc2VyaWY7CiAgaGVpZ2h0OiAxMDAlOwogIG1hcmdpbjogMDsKICBwYWRkaW5nOiAwOwogIHRleHQtYWxpZ246IGNlbnRlcjsKfQoKLmgtY29udGFpbmVyIHsKICBkaXNwbGF5OiBmbGV4OwogIGZsZXgtZGlyZWN0aW9uOiByb3c7CiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7CiAgaGVpZ2h0OiAxMDAlOwp9Cgoudi1jb250YWluZXIgewogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjsKICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjsKICBoZWlnaHQ6IDEwMCU7Cn0KCmJ1dHRvbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogaW5oZXJpdDsKICBib3JkZXI6IG5vbmU7CiAgY3Vyc29yOiBwb2ludGVyOwogIGZvbnQtZmFtaWx5OiBpbmhlcml0OwogIGZvbnQtc2l6ZTogaW5oZXJpdDsKfQoKYnV0dG9uOmZvY3VzIHsKICBvdXRsaW5lOiBub25lOwp9CgphOnZpc2l0ZWQgewogIGNvbG9yOiBpbmhlcml0Owp9CgpoZWFkZXIgewogIGJhY2tncm91bmQtY29sb3I6ICMwYjIwMjc7Cn0KCmhlYWRlciBidXR0b24gewogIGNvbG9yOiAjZDRkNGQ0OwogIHBhZGRpbmc6IDIwcHggMzBweDsKfQoKbWFpbiB7CiAgYmFja2dyb3VuZC1jb2xvcjogI2Q0ZDRkNDsKICBib3JkZXItcmFkaXVzOiBjYWxjKHZhcigtLXNpemUpIC8gMTApOwogIGZvbnQtZmFtaWx5OiAiVWJ1bnR1IE1vbm8iLCBtb25vc3BhY2U7CiAgZm9udC13ZWlnaHQ6IDcwMDsKICBwYWRkaW5nOiAwIDIwcHggMjBweCAyMHB4Owp9Cgouc3RhdHVzIHsKICBhbGlnbi1pdGVtczogY2VudGVyOwogIGNvbG9yOiAjMGIyMDI3OwogIGRpc3BsYXk6IGZsZXg7CiAgZmxleC1kaXJlY3Rpb246IHJvdzsKICBmb250LXNpemU6IDJlbTsKICBqdXN0aWZ5LWNvbnRlbnQ6IHNwYWNlLWJldHdlZW47CiAgbWFyZ2luOiAxNXB4IDA7Cn0KCi5zdGF0dXMgYnV0dG9uIHsKICBib3gtc2hhZG93OiBpbnNldCA0cHggNHB4IDBweCAwcHggcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjQ1KSwKICAgIGluc2V0IC00cHggLTRweCAwcHggMHB4IHJnYmEoMCwgMCwgMCwgMC4yNSk7CiAgYm9yZGVyLXJhZGl1czogNXB4Owp9CgouYm9hcmQgewogIGRpc3BsYXk6IGdyaWQ7CiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiByZXBlYXQodmFyKC0td2lkdGgpLCBhdXRvKTsKICBncmlkLXRlbXBsYXRlLXJvd3M6IHJlcGVhdCh2YXIoLS1oZWlnaHQpLCBhdXRvKTsKICB1c2VyLXNlbGVjdDogbm9uZTsKfQo="},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA0KA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA","file":"App.vue","sourceRoot":"src","sourcesContent":["<template>\n  <div class=\"v-container\">\n    <header>\n      <button @click=\"setBeginnerDifficulty\">Beginner</button>\n      <button @click=\"setIntermediateDifficulty\">Intermediate</button>\n      <button @click=\"setExpertDifficulty\">Expert</button>\n    </header>\n    <div class=\"h-container\">\n      <div class=\"v-container\">\n        <main :style=\"cssVars\">\n          <div class=\"status\">\n            <div>{{ bombsRemaining }}</div>\n            <button @click=\"reset\">{{ gameStatus }}</button>\n            <Timer :gameInProgress=\"gameInProgress\" />\n          </div>\n          <div class=\"board\">\n            <Tile\n              v-for=\"(tile, index) in tiles\"\n              :key=\"index\"\n              :tile=\"tile\"\n              :gameFailed=\"gameFailed\"\n              @flag=\"flag(index)\"\n              @reveal=\"reveal(index)\"\n            />\n          </div>\n        </main>\n      </div>\n    </div>\n  </div>\n</template>\n\n<script>\nimport Tile from \"./components/Tile\";\nimport Timer from \"./components/Timer\";\nimport { generateTiles, getCoordinates, getIndex } from \"./utils\";\n\nexport default {\n  name: \"App\",\n  components: {\n    Tile,\n    Timer,\n  },\n  data: () => ({\n    config: {}, // Initialized in created lifecycle hook\n    tiles: [], // Initialized in created lifecycle hook\n  }),\n  created() {\n    // At initialization set the game difficulty to beginner and re-render the game\n    this.setBeginnerDifficulty();\n  },\n  computed: {\n    cssVars() {\n      return {\n        \"--width\": this.config.width,\n        \"--height\": this.config.height,\n        \"--size\": `${this.config.size}px`,\n      };\n    },\n    bombsRemaining() {\n      // Reduce total number of bombs by the number of flagged tiles\n      const numberOfFlaggedTiles = this.tiles.filter((t) => t.flagged).length;\n      return this.config.totalNumberOfBombs - numberOfFlaggedTiles;\n    },\n    gameInProgress() {\n      // If game has ended already then return false\n      if (this.gameWon || this.gameFailed) return false;\n      // If tiles are revealed then return true\n      if (this.tiles.find((tile) => tile.revealed)) return true;\n      // If game haven't even started then return false\n      return false;\n    },\n    gameFailed() {\n      // Once you reveal a tile that contains a bomb you failed\n      return this.tiles.find((tile) => tile.bomb && tile.revealed) != undefined;\n    },\n    gameWon() {\n      // To win the game you need to reveal all the tiles that do not contain a bomb\n      const tilesRevealed = this.tiles.filter((tile) => tile.revealed).length;\n      return (\n        tilesRevealed + this.config.totalNumberOfBombs ==\n        this.config.width * this.config.height\n      );\n    },\n    gameStatus() {\n      if (this.gameFailed) return \"ðŸ˜”\";\n      if (this.gameWon) return \"ðŸ˜Ž\";\n      return \"ðŸ™‚\";\n    },\n  },\n  methods: {\n    setBeginnerDifficulty() {\n      this.config = {\n        width: 8,\n        height: 8,\n        totalNumberOfBombs: 10,\n        size: 50,\n      };\n      this.reset();\n    },\n    setIntermediateDifficulty() {\n      this.config = {\n        width: 16,\n        height: 16,\n        totalNumberOfBombs: 40,\n        size: 35,\n      };\n      this.reset();\n    },\n    setExpertDifficulty() {\n      this.config = {\n        width: 30,\n        height: 16,\n        totalNumberOfBombs: 99,\n        size: 25,\n      };\n      this.reset();\n    },\n    reset() {\n      // Reset tiles based on the config\n      this.tiles = generateTiles(this.config);\n    },\n    reveal(i) {\n      // Do nothing if the game has already failed\n      if (this.gameFailed) return;\n\n      // Do nothing in case of wrong input\n      // This can happen when the neighbours of a tile are being revealed and the 'neighbour' is out of the field\n      if (i == undefined) return;\n\n      const tile = this.tiles[i];\n\n      // You can't reveal a flagged tile, you need to unflag it first\n      if (tile.flagged) return;\n\n      // Only reveal a tile if it is not revealed already\n      // Avoids infinite loop of tile revealing it's neighbour then neighbour revealing the original tile\n      if (!tile.revealed) {\n        // Reveal tile\n        tile.revealed = true;\n\n        // If the tile is empty, also reveal the neighbour tiles\n        if (!tile.bomb && tile.surroundingBombs == 0) {\n          const { row, column } = getCoordinates(i, this.config);\n\n          this.reveal(getIndex(row - 1, column - 1, this.config)); // Reveal top left neighbour\n          this.reveal(getIndex(row - 1, column - 0, this.config)); // Reveal top neighbour\n          this.reveal(getIndex(row - 1, column + 1, this.config)); // Reveal top right neighbour\n          this.reveal(getIndex(row - 0, column - 1, this.config)); // Reveal left neighbour\n          this.reveal(getIndex(row - 0, column + 1, this.config)); // Reveal right neighbour\n          this.reveal(getIndex(row + 1, column - 1, this.config)); // Reveal bottom left neighbour\n          this.reveal(getIndex(row + 1, column - 0, this.config)); // Reveal bottom neighbour\n          this.reveal(getIndex(row + 1, column + 1, this.config)); // Reveal bottom right neighbour\n        }\n      }\n    },\n    flag(i) {\n      // Do nothing if the game has already failed\n      if (this.gameFailed) return;\n\n      // Do nothing if the tile is alerady revealed\n      if (this.tiles[i].revealed) return;\n\n      // Flag or unflag tile\n      this.tiles[i].flagged = !this.tiles[i].flagged;\n    },\n  },\n};\n</script>\n\n<style>\n@import url(\"https://fonts.googleapis.com/css2?family=Roboto&family=Ubuntu:wght@700&display=swap\");\n\nhtml {\n  height: 100%;\n}\n\nbody {\n  background-color: #006989;\n  font-family: \"Roboto\", sans-serif;\n  height: 100%;\n  margin: 0;\n  padding: 0;\n  text-align: center;\n}\n\n.h-container {\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  height: 100%;\n}\n\n.v-container {\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  height: 100%;\n}\n\nbutton {\n  background-color: inherit;\n  border: none;\n  cursor: pointer;\n  font-family: inherit;\n  font-size: inherit;\n}\n\nbutton:focus {\n  outline: none;\n}\n\na:visited {\n  color: inherit;\n}\n\nheader {\n  background-color: #0b2027;\n}\n\nheader button {\n  color: #d4d4d4;\n  padding: 20px 30px;\n}\n\nmain {\n  background-color: #d4d4d4;\n  border-radius: calc(var(--size) / 10);\n  font-family: \"Ubuntu Mono\", monospace;\n  font-weight: 700;\n  padding: 0 20px 20px 20px;\n}\n\n.status {\n  align-items: center;\n  color: #0b2027;\n  display: flex;\n  flex-direction: row;\n  font-size: 2em;\n  justify-content: space-between;\n  margin: 15px 0;\n}\n\n.status button {\n  box-shadow: inset 4px 4px 0px 0px rgba(255, 255, 255, 0.45),\n    inset -4px -4px 0px 0px rgba(0, 0, 0, 0.25);\n  border-radius: 5px;\n}\n\n.board {\n  display: grid;\n  grid-template-columns: repeat(var(--width), auto);\n  grid-template-rows: repeat(var(--height), auto);\n  user-select: none;\n}\n</style>\n"]}]}